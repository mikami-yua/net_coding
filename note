一、网络编程入门
    1.软件结构
        C/S结构：client/Server
        B/S结构：browser/server

    2.通信协议
        TCP/IP：传输控制协议/因特网互联协议
            定义计算机如何连接因特网，以及数据如何传输。采用4层模型，每一层都呼叫下一层提供的协议，完成自己的需求。
                四层：应用层，传输层，网络层（核心层，将网络传输的信息分组），数据链路层和物理层
            主要研究tcp和udp协议，工作在传输层

    3.协议的分类
        UDP：用户数据报协议，面向无连接，消耗资源小，通信效率高，不能保证数据的完整性，数据限制64K
        TCP：传输控制协议，面向连接，提供可靠的无差错的数据连接。三次握手，四次挥手

    4.网络编程三要素
        协议
        IP
            查看本机ip ipconfig
            ping ip地址
            本地ip 127.0.0.1 localhost本地主机

        端口号
            是一个逻辑端口，不能直接看到，可以使用一些软件看到
            当使用网络软件时，一打开，操作系统会为网络软件分配一个随机的端口号。或者网络软件向系统要指定的端口号
            端口号由两个字节组成。取值范围在0-65535之间
                【注意】1024之前的端口号不能使用，已经被系统分配给已知的软件了
                【注意】端口号不能重复
            常用端口号
                80端口： 网络端口  www.baidu.com:80正常网址（不加端口号，默认就是80）
                3306 mysql          1521 oracle
                8080 Tomcat

二、TCP通信协议

    1.概述
        能实现两个计算机之间的通信，通信的两端要严格区分客户端和服务器端
        Java中提供了两个类，用于实现TCP通信程序
            java.net.Socket
            java.net.ServerSocket
        必须是客户端请求服务器端，之后会建立一个逻辑连接，这个连接中包含一个对象，是个IO对象。客户和服务器通过这个IO对象进行通信。
        通信的对象不仅是字符，所以IO对象是字节流对象

        客户端： ip 端口号 由Socket类表示客户计算机
        服务器： ip 端口号 由ServerSocket类表示服务器
        客户端与服务器端建立连接通路之后，连接通路中有一个IO流对象
        客户端给服务器发送数据使用OutputStream
        服务器读取数据：InputStream
        客户端和服务器端进行一次数据交互，需要4个IO流对象

        服务器端需要明确：
            多个客户端可以同时与服务器端进行交互，服务器需要明确和那个客户端进行交互，服务器端有个方法accept可以获取到客户端请求的对象

            多个客户端同时和服务器进行交互，就需要多个IO流对象。
            服务器是没有IO流的，服务器可以获取到请求客户端对象Socket，使用每个客户端Socket中提供的IO流与客户端交互
            服务器使用客户端的字节输入流，读取客户端发送的数据
            服务器使用客户端的字节输出流，回写数据

            服务器使用客户端流和客户端交互

p412
